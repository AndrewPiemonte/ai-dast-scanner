{{- if .Values.scan_settings.zapScanJobEnabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.job.name }}
  namespace: {{ .Values.job.namespace }}
spec:
  parallelism: 1  # Ensures only one pod runs at a time
  completions: 1  # Job completes after one successful pod
  backoffLimit: 0 # No retry when job fails
  ttlSecondsAfterFinished: 600  # Cleanup completed job after 10 minutes
  template:
    spec:
      serviceAccountName: backend-sa
      # initContainers:
      # - name: init-volume
      #   image: busybox
      #   command: ['sh', '-c', 'mkdir -p /zap/wrk']
      #   volumeMounts:
      #   - name: zap-reports
      #     mountPath: /zap/wrk
      #   securityContext:
      #     runAsUser: 0
      #     runAsGroup: 0
      #     privileged: true
      containers:
      - name: zap-baseline
        image: {{ .Values.job.image.repository }}:{{ .Values.job.image.tag }}
        command: ["python3", "/zap/wrk/run_scan.py"]
        env:
          # Mandatory Environment Variables
          - name: SCAN_MODE
            value: "{{ .Values.scan_settings.scanMode }}"
          - name: SCAN_ID
            value: "{{ .Values.job.scanid }}"
          
          # Flags (Enabled/Disabled)
          - name: ENABLE_ALPHA
            value: "{{ .Values.scan_settings.flags.ENABLE_ALPHA }}"
          - name: ENABLE_IGNORE_WARNINGS
            value: "{{ .Values.scan_settings.flags.ENABLE_IGNORE_WARNINGS }}"
          - name: ENABLE_AJAX_SPIDER
            value: "{{ .Values.scan_settings.flags.ENABLE_AJAX_SPIDER }}"
          - name: ENABLE_SHORT_OUTPUT
            value: "{{ .Values.scan_settings.flags.ENABLE_SHORT_OUTPUT }}"
          - name: ENABLE_PASSIVE_SCAN
            value: "{{ .Values.scan_settings.flags.ENABLE_PASSIVE_SCAN }}"
          - name: ENABLE_DEBUG
            value: "{{ .Values.scan_settings.flags.ENABLE_DEBUG }}"
          - name: ENABLE_TARGET_URL
            value: "{{ .Values.scan_settings.flags.ENABLE_TARGET_URL }}"
          - name: ENABLE_SCAN_CONFIG
            value: "{{ .Values.scan_settings.flags.ENABLE_SCAN_CONFIG }}"
          - name: ENABLE_SCAN_TIMEOUT
            value: "{{ .Values.scan_settings.flags.ENABLE_SCAN_TIMEOUT }}"
          - name: ENABLE_REMOVE
            value: "{{ .Values.scan_settings.flags.ENABLE_REMOVE }}"
          - name: ENABLE_SPIDER_MAX_DURATION
            value: "{{ .Values.scan_settings.flags.ENABLE_SPIDER_MAX_DURATION }}"
          - name: ENABLE_PORT
            value: "{{ .Values.scan_settings.flags.ENABLE_PORT }}"
          - name: ENABLE_DELAY
            value: "{{ .Values.scan_settings.flags.ENABLE_DELAY }}"
          - name: ENABLE_OUTPUT_FILE_JSON
            value: "{{ .Values.scan_settings.flags.ENABLE_OUTPUT_FILE_JSON }}"

          # Values (Only applied if their corresponding flag is enabled)
          - name: TARGET_URL
            value: "{{ .Values.scan_settings.values.TARGET_URL }}"
          - name: SCAN_CONFIG
            value: "{{ .Values.scan_settings.values.SCAN_CONFIG }}"
          - name: SCAN_TIMEOUT
            value: "{{ .Values.scan_settings.values.SCAN_TIMEOUT }}"
          - name: REMOVE_VALUE
            value: "{{ .Values.scan_settings.values.REMOVE_VALUE }}"
          - name: SPIDER_MAX_DURATION
            value: "{{ .Values.scan_settings.values.SPIDER_MAX_DURATION }}"
          - name: PORT_NUMBER
            value: "{{ .Values.scan_settings.values.PORT_NUMBER }}"
          - name: DELAY_TIME
            value: "{{ .Values.scan_settings.values.DELAY_TIME }}"
          - name: OUTPUT_FILE_JSON
            value: "scan-reports/{{ .Values.scan_settings.scanMode }}-{{ .Values.job.scanid }}.json"
        volumeMounts:
        - name: zap-reports
          mountPath: /zap/wrk
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      volumes:
      - name: zap-reports
        persistentVolumeClaim:
          claimName: zap-reports-pvc
      restartPolicy: Never
{{- end }}
